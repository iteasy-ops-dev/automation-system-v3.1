openapi: 3.0.3
info:
  title: Device Management Service API
  version: 1.0.0
  description: 장비 관리 및 모니터링 API (섹션 2.3 기반)
  contact:
    name: Backend Team - Domains
    email: backend-domains@automation-system.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8101/api/v1
    description: Development server
  - url: http://device-service:8101/api/v1
    description: Internal service communication

paths:
  /devices/{id}/status:
    get:
      summary: 장비 현재 상태 조회
      description: 특정 장비의 실시간 상태 정보를 조회합니다.
      operationId: getDeviceStatus
      tags:
        - Device Status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: 장비 고유 ID
          example: "550e8400-e29b-41d4-a716-446655440000"
        - name: includeMetrics
          in: query
          schema:
            type: boolean
            default: true
          description: 메트릭 정보 포함 여부
        - name: includeErrors
          in: query
          schema:
            type: boolean
            default: true
          description: 에러 정보 포함 여부
      responses:
        '200':
          description: 장비 상태 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatus'
              examples:
                online_server:
                  summary: 온라인 서버 상태
                  value:
                    deviceId: "550e8400-e29b-41d4-a716-446655440000"
                    status: "online"
                    lastHeartbeat: "2024-01-15T10:30:00Z"
                    metrics:
                      cpu: 45.2
                      memory: 68.7
                      disk: 34.1
                      network:
                        rxBytes: 1024000
                        txBytes: 512000
                    uptime: 86400
                    errors: []
                offline_device:
                  summary: 오프라인 장비 상태
                  value:
                    deviceId: "660e8400-e29b-41d4-a716-446655440001"
                    status: "offline"
                    lastHeartbeat: "2024-01-15T09:00:00Z"
                    metrics: null
                    uptime: 0
                    errors:
                      - "Connection timeout"
                      - "No response from agent"
        '400':
          description: 잘못된 장비 ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 장비를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /devices/{id}/metrics:
    get:
      summary: 장비 메트릭 조회
      description: 특정 장비의 메트릭 이력을 조회합니다.
      operationId: getDeviceMetrics
      tags:
        - Device Metrics
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: 장비 고유 ID
          example: "550e8400-e29b-41d4-a716-446655440000"
        - name: metric
          in: query
          schema:
            type: string
            enum: [cpu, memory, disk, network, temperature, power]
          description: 특정 메트릭 타입 필터
          example: "cpu"
        - name: start
          in: query
          schema:
            type: string
            format: date-time
          description: 조회 시작 시간
          example: "2024-01-15T00:00:00Z"
        - name: end
          in: query
          schema:
            type: string
            format: date-time
          description: 조회 종료 시간
          example: "2024-01-15T23:59:59Z"
        - name: interval
          in: query
          schema:
            type: string
            enum: [1m, 5m, 15m, 1h, 6h, 24h]
            default: 5m
          description: 집계 간격
          example: "5m"
        - name: aggregation
          in: query
          schema:
            type: string
            enum: [avg, min, max, sum, last]
            default: avg
          description: 집계 방식
          example: "avg"
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 10000
            default: 1000
          description: 최대 데이터 포인트 수
      responses:
        '200':
          description: 메트릭 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceMetrics'
              examples:
                cpu_metrics:
                  summary: CPU 사용률 메트릭
                  value:
                    deviceId: "550e8400-e29b-41d4-a716-446655440000"
                    metric: "cpu"
                    unit: "percent"
                    interval: "5m"
                    aggregation: "avg"
                    dataPoints:
                      - timestamp: "2024-01-15T10:00:00Z"
                        value: 45.2
                      - timestamp: "2024-01-15T10:05:00Z"
                        value: 48.7
                      - timestamp: "2024-01-15T10:10:00Z"
                        value: 42.1
                    summary:
                      min: 42.1
                      max: 48.7
                      avg: 45.33
                      count: 3
                memory_metrics:
                  summary: 메모리 사용률 메트릭
                  value:
                    deviceId: "550e8400-e29b-41d4-a716-446655440000"
                    metric: "memory"
                    unit: "percent"
                    interval: "5m"
                    aggregation: "avg"
                    dataPoints:
                      - timestamp: "2024-01-15T10:00:00Z"
                        value: 68.7
                      - timestamp: "2024-01-15T10:05:00Z"
                        value: 71.2
                      - timestamp: "2024-01-15T10:10:00Z"
                        value: 69.8
                    summary:
                      min: 68.7
                      max: 71.2
                      avg: 69.9
                      count: 3
        '400':
          description: 잘못된 요청 파라미터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 장비를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /devices/{id}/heartbeat:
    post:
      summary: 장비 하트비트 전송
      description: 장비의 생존 신호를 전송합니다.
      operationId: sendHeartbeat
      tags:
        - Device Status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: 장비 고유 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeartbeatRequest'
      responses:
        '200':
          description: 하트비트 수신 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeartbeatResponse'
        '400':
          description: 잘못된 요청 데이터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 장비를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /devices/health:
    get:
      summary: 전체 장비 건강 상태 조회
      description: 모든 장비의 건강 상태 요약을 조회합니다.
      operationId: getDevicesHealth
      tags:
        - Device Health
      parameters:
        - name: groupId
          in: query
          schema:
            type: string
            format: uuid
          description: 그룹별 필터링
        - name: status
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [online, offline, error, maintenance]
          style: form
          explode: false
          description: 상태별 필터링
        - name: critical
          in: query
          schema:
            type: boolean
          description: 임계 상태만 조회
      responses:
        '200':
          description: 건강 상태 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesHealth'
        '400':
          description: 잘못된 요청 파라미터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /devices/{id}/alerts:
    get:
      summary: 장비 알림 조회
      description: 특정 장비의 알림 목록을 조회합니다.
      operationId: getDeviceAlerts
      tags:
        - Device Alerts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: 장비 고유 ID
        - name: severity
          in: query
          schema:
            type: string
            enum: [low, medium, high, critical]
          description: 심각도별 필터링
        - name: status
          in: query
          schema:
            type: string
            enum: [active, acknowledged, resolved]
          description: 상태별 필터링
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: 알림 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAlertsResponse'
        '400':
          description: 잘못된 요청 파라미터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 장비를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    DeviceStatus:
      type: object
      required:
        - deviceId
        - status
        - lastHeartbeat
      properties:
        deviceId:
          type: string
          format: uuid
          description: 장비 고유 ID
          example: "550e8400-e29b-41d4-a716-446655440000"
        status:
          type: string
          enum: [online, offline, error, maintenance]
          description: 장비 상태
          example: "online"
        lastHeartbeat:
          type: string
          format: date-time
          description: 마지막 하트비트 시간
          example: "2024-01-15T10:30:00Z"
        uptime:
          type: integer
          minimum: 0
          description: 가동 시간 (초)
          example: 86400
        metrics:
          type: object
          nullable: true
          description: 현재 메트릭 정보
          properties:
            cpu:
              type: number
              minimum: 0
              maximum: 100
              description: CPU 사용률 (%)
              example: 45.2
            memory:
              type: number
              minimum: 0
              maximum: 100
              description: 메모리 사용률 (%)
              example: 68.7
            disk:
              type: number
              minimum: 0
              maximum: 100
              description: 디스크 사용률 (%)
              example: 34.1
            network:
              type: object
              properties:
                rxBytes:
                  type: integer
                  minimum: 0
                  description: 수신 바이트
                txBytes:
                  type: integer
                  minimum: 0
                  description: 송신 바이트
            temperature:
              type: number
              description: 온도 (℃)
              example: 42.5
            power:
              type: number
              description: 전력 소비량 (W)
              example: 150.0
        errors:
          type: array
          items:
            type: string
          description: 현재 에러 목록
          example: []
        lastError:
          type: string
          nullable: true
          description: 마지막 에러 메시지
          example: null
        version:
          type: string
          description: 에이전트 버전
          example: "1.0.0"

    DeviceMetrics:
      type: object
      required:
        - deviceId
        - metric
        - unit
        - dataPoints
      properties:
        deviceId:
          type: string
          format: uuid
          description: 장비 고유 ID
          example: "550e8400-e29b-41d4-a716-446655440000"
        metric:
          type: string
          description: 메트릭 타입
          example: "cpu"
        unit:
          type: string
          description: 단위
          example: "percent"
        interval:
          type: string
          description: 집계 간격
          example: "5m"
        aggregation:
          type: string
          description: 집계 방식
          example: "avg"
        dataPoints:
          type: array
          items:
            $ref: '#/components/schemas/MetricDataPoint'
          description: 메트릭 데이터 포인트
        summary:
          type: object
          properties:
            min:
              type: number
              description: 최솟값
            max:
              type: number
              description: 최댓값
            avg:
              type: number
              description: 평균값
            count:
              type: integer
              description: 데이터 포인트 수

    MetricDataPoint:
      type: object
      required:
        - timestamp
        - value
      properties:
        timestamp:
          type: string
          format: date-time
          description: 측정 시간
          example: "2024-01-15T10:30:00Z"
        value:
          type: number
          description: 측정값
          example: 45.2
        tags:
          type: object
          additionalProperties: 
            type: string
          description: 추가 태그 정보

    HeartbeatRequest:
      type: object
      required:
        - timestamp
        - status
      properties:
        timestamp:
          type: string
          format: date-time
          description: 하트비트 시간
          example: "2024-01-15T10:30:00Z"
        status:
          type: string
          enum: [online, maintenance]
          description: 장비 상태
          example: "online"
        metrics:
          type: object
          description: 현재 메트릭 정보
          properties:
            cpu:
              type: number
              minimum: 0
              maximum: 100
            memory:
              type: number
              minimum: 0
              maximum: 100
            disk:
              type: number
              minimum: 0
              maximum: 100
        version:
          type: string
          description: 에이전트 버전
          example: "1.0.0"
        errors:
          type: array
          items:
            type: string
          description: 현재 에러 목록

    HeartbeatResponse:
      type: object
      required:
        - received
        - nextHeartbeat
      properties:
        received:
          type: string
          format: date-time
          description: 수신 시간
          example: "2024-01-15T10:30:00Z"
        nextHeartbeat:
          type: integer
          description: 다음 하트비트까지의 시간 (초)
          example: 60
        configuration:
          type: object
          description: 업데이트된 설정 정보
          additionalProperties: true

    DevicesHealth:
      type: object
      required:
        - summary
        - details
      properties:
        summary:
          type: object
          required:
            - total
            - online
            - offline
            - error
            - maintenance
          properties:
            total:
              type: integer
              description: 전체 장비 수
              example: 100
            online:
              type: integer
              description: 온라인 장비 수
              example: 85
            offline:
              type: integer
              description: 오프라인 장비 수
              example: 10
            error:
              type: integer
              description: 에러 상태 장비 수
              example: 3
            maintenance:
              type: integer
              description: 점검 중 장비 수
              example: 2
        details:
          type: array
          items:
            $ref: '#/components/schemas/DeviceHealthDetail'
          description: 상세 정보 (문제가 있는 장비만)
        lastUpdated:
          type: string
          format: date-time
          description: 마지막 업데이트 시간
          example: "2024-01-15T10:30:00Z"

    DeviceHealthDetail:
      type: object
      required:
        - deviceId
        - name
        - status
        - issue
      properties:
        deviceId:
          type: string
          format: uuid
          description: 장비 고유 ID
        name:
          type: string
          description: 장비명
        status:
          type: string
          enum: [offline, error, maintenance]
          description: 상태
        issue:
          type: string
          description: 문제점 설명
        lastSeen:
          type: string
          format: date-time
          description: 마지막 확인 시간
        severity:
          type: string
          enum: [low, medium, high, critical]
          description: 심각도

    DeviceAlert:
      type: object
      required:
        - id
        - deviceId
        - type
        - severity
        - message
        - status
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: 알림 고유 ID
        deviceId:
          type: string
          format: uuid
          description: 장비 고유 ID
        type:
          type: string
          enum: [metric_threshold, heartbeat_timeout, error_detected, maintenance_required]
          description: 알림 타입
        severity:
          type: string
          enum: [low, medium, high, critical]
          description: 심각도
        message:
          type: string
          description: 알림 메시지
        status:
          type: string
          enum: [active, acknowledged, resolved]
          description: 알림 상태
        details:
          type: object
          additionalProperties: true
          description: 추가 상세 정보
        createdAt:
          type: string
          format: date-time
          description: 생성 시간
        acknowledgedAt:
          type: string
          format: date-time
          nullable: true
          description: 확인 시간
        resolvedAt:
          type: string
          format: date-time
          nullable: true
          description: 해결 시간

    DeviceAlertsResponse:
      type: object
      required:
        - items
        - total
        - limit
        - offset
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeviceAlert'
        total:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
        offset:
          type: integer
          minimum: 0

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: 오류 코드
          example: "DEVICE_NOT_FOUND"
        message:
          type: string
          description: 오류 메시지
          example: "Device with ID '550e8400-e29b-41d4-a716-446655440000' not found"
        timestamp:
          type: string
          format: date-time
          description: 오류 발생 시간
          example: "2024-01-15T10:30:00Z"
        details:
          type: object
          additionalProperties: true
          description: 추가 오류 상세 정보

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

tags:
  - name: Device Status
    description: 장비 상태 관리 API
  - name: Device Metrics
    description: 장비 메트릭 조회 API
  - name: Device Health
    description: 장비 건강 상태 API
  - name: Device Alerts
    description: 장비 알림 관리 API
