{
  "name": "automation-system-v3.1",
  "version": "3.1.0",
  "description": "통합 자동화 시스템 - 실용적 마이크로서비스 아키텍처",
  "private": true,
  "workspaces": [
    "services/core/*",
    "services/domain/*",
    "services/supporting/*",
    "frontend/*",
    "shared/lib"
  ],
  "scripts": {
    "dev": "docker-compose up -d",
    "dev:logs": "docker-compose logs -f",
    "dev:stop": "docker-compose down",
    "dev:clean": "docker-compose down -v --remove-orphans",
    "build": "docker-compose build",
    "build:no-cache": "docker-compose build --no-cache",
    "test": "npm run test --workspaces",
    "test:integration": "jest --config tests/integration/jest.config.js",
    "test:integration:full": "./tests/integration/run-integration-tests.sh",
    "test:contracts": "jest --config tests/integration/jest.config.js --testPathPattern=contracts",
    "test:scenarios": "jest --config tests/integration/jest.config.js --testPathPattern=scenarios",
    "test:performance": "k6 run tests/integration/performance/load-test.js",
    "test:e2e": "playwright test",
    "test:coverage": "jest --config tests/integration/jest.config.js --coverage",
    "test:watch": "jest --config tests/integration/jest.config.js --watch",
    "test:pre-check": "npm run contracts:validate && npm run db:validate && npm run health",
    "test:db:reset": "docker-compose exec postgres psql -U postgres -c 'DROP DATABASE IF EXISTS automation_test; CREATE DATABASE automation_test;'",
    "test:seed": "DATABASE_URL=postgresql://postgres:password@localhost:5432/automation_test node infrastructure/scripts/seed.js",
    "test:cleanup": "docker-compose exec postgres psql -U postgres -c 'DROP DATABASE IF EXISTS automation_test;'",
    "test:mcp:start": "node tests/integration/helpers/mock-mcp-server.js",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "validate": "npm run lint && npm run format:check && npm run test",
    "contracts:validate": "node infrastructure/scripts/validate-contracts.js",
    "contracts:docs": "swagger-codegen generate -i shared/contracts/v1.0/rest -o docs/api",
    "contracts:sdk": "openapi-generator-cli generate -g typescript-axios -i shared/contracts/v1.0/rest -o shared/lib/sdk",
    "db:migrate": "./infrastructure/scripts/migrate-database.sh",
    "db:seed": "node infrastructure/scripts/seed.js",
    "db:validate": "./infrastructure/scripts/validate-schema.sh",
    "schema:validate": "npm run contracts:validate && npm run db:validate",
    "schema:init": "npm run db:migrate && npm run db:validate",
    "monitoring:start": "docker-compose up -d monitoring",
    "monitoring:dashboard": "open http://localhost:3000",
    "setup": "npm install && npm run contracts:validate && npm run build",
    "clean": "npm run dev:clean && docker system prune -f",
    "health": "node infrastructure/scripts/health-check.js",
    "kafka:topics": "./infrastructure/scripts/create-kafka-topics.sh",
    "kafka:schemas": "./infrastructure/scripts/register-event-schemas.sh",
    "kafka:health": "./infrastructure/scripts/kafka-health-check.sh",
    "kafka:setup": "npm run kafka:topics && npm run kafka:schemas",
    "kafka:reset": "docker-compose restart kafka schema-registry && sleep 30 && npm run kafka:setup"
  },
  "devDependencies": {
    "@influxdata/influxdb-client": "^1.35.0",
    "@pact-foundation/pact": "^12.5.2",
    "@playwright/test": "^1.0.0",
    "@prisma/client": "^5.7.0",
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "axios": "^1.11.0",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.0.0",
    "eslint-plugin-react": "^7.0.0",
    "eslint-plugin-react-hooks": "^4.0.0",
    "eslint-plugin-security": "^1.0.0",
    "husky": "^8.0.0",
    "ioredis": "^5.6.1",
    "jest": "^29.0.0",
    "kafkajs": "^2.2.4",
    "lint-staged": "^14.0.0",
    "prettier": "^3.0.0",
    "supertest": "^6.3.4",
    "typescript": "^5.0.0",
    "uuid": "^11.1.0",
    "ws": "^8.18.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "keywords": [
    "automation",
    "microservices",
    "n8n",
    "mcp",
    "llm",
    "docker",
    "typescript",
    "react"
  ],
  "author": "Automation System Team",
  "license": "MIT",
  "dependencies": {
    "js-yaml": "^4.1.0",
    "socket.io-client": "^4.8.1"
  }
}
