generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MCP Integration Service에서 사용하는 모델들
// Storage Service와 같은 데이터베이스를 사용하되, MCP 관련 모델만 포함

model McpServer {
  id               String         @id @default(uuid())
  name             String         @unique @db.VarChar(100)
  description      String?
  transport        String         @db.VarChar(20)  // stdio, ssh, docker, http
  status           String         @default("inactive") @db.VarChar(20)
  connectionStatus String         @default("disconnected") @map("connection_status") @db.VarChar(20)
  
  // Transport별 설정
  command          String?        @db.VarChar(500)  // stdio transport
  args             String[]       @default([])      // stdio transport args
  sshConfig        Json?          @map("ssh_config")    // SSH transport 설정
  dockerConfig     Json?          @map("docker_config") // Docker transport 설정  
  httpConfig       Json?          @map("http_config")   // HTTP transport 설정
  
  // MCP 서버 정보
  serverInfo       Json?          @map("server_info")   // name, version, capabilities
  
  // 기존 필드들 (호환성 유지)
  serverType       String?        @map("server_type") @db.VarChar(50)
  endpointUrl      String?        @map("endpoint_url") @db.VarChar(500)
  connectionConfig Json?          @default("{}") @map("connection_config")
  version          String?        @db.VarChar(20)
  capabilities     Json?          @default("[]")
  lastHeartbeat    DateTime?      @map("last_heartbeat") @db.Timestamp(6)
  lastError        String?        @map("last_error")
  
  metadata         Json?          @default("{}")
  createdAt        DateTime?      @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt        DateTime?      @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  executions       McpExecution[]
  tools            McpTool[]

  @@index([transport], map: "idx_mcp_servers_transport")
  @@index([status], map: "idx_mcp_servers_status")
  @@map("mcp_servers")
}

model McpTool {
  id           String    @id @default(uuid())
  serverId     String    @map("server_id")
  name         String    @db.VarChar(100)
  description  String?
  version      String?   @db.VarChar(20)
  schema       Json?
  capabilities Json?     @default("[]")
  isEnabled    Boolean?  @default(true) @map("is_enabled")
  createdAt    DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  server       McpServer @relation(fields: [serverId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([serverId, name], name: "unique_tool_per_server", map: "unique_tool_per_server")
  @@index([name], map: "idx_mcp_tools_name")
  @@index([serverId], map: "idx_mcp_tools_server_id")
  @@map("mcp_tools")
}

model McpExecution {
  id              String    @id @default(uuid())
  serverId        String    @map("server_id")
  toolName        String    @map("tool_name") @db.VarChar(100)
  executionParams Json?     @map("execution_params")
  status          String    @db.VarChar(20)
  result          Json?
  errorMessage    String?   @map("error_message")
  startedAt       DateTime? @default(now()) @map("started_at") @db.Timestamp(6)
  completedAt     DateTime? @map("completed_at") @db.Timestamp(6)
  durationMs      Int?      @map("duration_ms")
  executedBy      String?   @map("executed_by")
  server          McpServer @relation(fields: [serverId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            User?     @relation(fields: [executedBy], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([serverId], map: "idx_mcp_executions_server_id")
  @@index([startedAt], map: "idx_mcp_executions_started_at")
  @@index([status], map: "idx_mcp_executions_status")
  @@map("mcp_executions")
}

// 참조용 User 모델 (executedBy 관계를 위해 필요)
model User {
  id                    String                @id @default(uuid())
  username              String                @unique @db.Citext
  email                 String                @unique @db.Citext
  passwordHash          String                @map("password_hash") @db.VarChar(255)
  fullName              String?               @map("full_name") @db.VarChar(100)
  role                  String                @default("user") @db.VarChar(50)
  status                String                @default("active") @db.VarChar(20)
  lastLoginAt           DateTime?             @map("last_login_at") @db.Timestamp(6)
  passwordChangedAt     DateTime?             @default(now()) @map("password_changed_at") @db.Timestamp(6)
  createdAt             DateTime?             @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt             DateTime?             @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  mcpExecutions         McpExecution[]

  @@index([email], map: "idx_users_email")
  @@index([username], map: "idx_users_username")
  @@map("users")
}